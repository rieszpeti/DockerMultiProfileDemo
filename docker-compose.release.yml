services:
  dockermultiprofiledemo.api:
    container_name: dockermultiprofiledemo.api.prod
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
    build:
      args:
        - BUILD_CONFIGURATION=Release
    networks:
      - proxy
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.dockermultiprofiledemo.rule=Host(`myapp.local`)
      - traefik.http.routers.dockermultiprofiledemo.entrypoints=websecure
      - traefik.http.routers.dockermultiprofiledemo.tls=true
      - traefik.http.services.dockermultiprofiledemo.loadbalancer.server.port=8080

  dockermultiprofiledemo.db:
     container_name: dockermultiprofiledemo.db.release
     networks:
       - backend
  
  traefik:
    container_name: traefik
    image: traefik:v3.1.2
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    command:
      - --api.dashboard=true
      - --log.level=INFO
      - --accesslog=true
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Comment out or remove ACME settings
      # - --entrypoints.websecure.http.tls.certresolver=myresolver
      # - --certificatesresolvers.myresolver.acme.email=your-email@gmail.com
      # - --certificatesresolvers.myresolver.acme.tlschallenge=true
      # - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`myapp.local`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/

  whoami:
    container_name: whoami
    image: traefik/whoami:v1.8
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mywhoami.rule=Host(`whoami.local`)
      - traefik.http.services.mywhoami.loadbalancer.server.port=80
      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.mywhoami.middlewares=mywwwredirect

networks:
  proxy:
    name: proxy
  backend:
    name: backend

volumes:
  letsencrypt:
    name: letsencrypt
  database_data:
    name: database_data