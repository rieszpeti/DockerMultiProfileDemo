services:
  dockermultiprofiledemo.api:
    image: ${DOCKER_REGISTRY-}dockermultiprofiledemo.api
    build:
      context: .
      dockerfile: DockerMultiProfileDemo/Dockerfile
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      - ISDOCKERENV=true
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
    depends_on:
      - dockermultiprofiledemo.db
      - dockermultiprofiledemo.cache

  dockermultiprofiledemo.db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./.containers/dockermultiprofiledemo-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  dockermultiprofiledemo.cache:
    image: redis:latest
    container_name: dockermultiprofiledemo.cache

  pythonproject:
    container_name: fastapi
    build:
      context: .
      dockerfile: PythonProject/Dockerfile
    depends_on:
      - dockermultiprofiledemo.api
     